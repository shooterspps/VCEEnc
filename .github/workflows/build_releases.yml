name: Build Windows Releases

on:
  push:
    branches:
      - AU2
      - actions
    tags:
      - '*'

jobs:
  get_version_name:
    name: Get version name
    runs-on: ubuntu-latest
    outputs:
      rev_count: ${{ steps.rev.outputs.rev_count }}
      version_name: ${{ steps.rev.outputs.version_name }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set version name
      id: rev
      run: |
        cd ${{ github.workspace }}
        REVCOUNT=`git rev-list --count HEAD`
        echo "rev_count=${REVCOUNT}" >> $GITHUB_OUTPUT
        if [[ "${{ github.ref }}" =~ "refs/tags/" ]]; then
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
        else
          VERSION=r${REVCOUNT}
        fi
        echo "version_name=${VERSION}" >> $GITHUB_OUTPUT

  build:
    name: Upload Release Asset
    runs-on: windows-2022
    needs: get_version_name

    defaults:
      run:
        shell: cmd

    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            platform: Win32
          - arch: x64
            platform: x64
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Checkout dependencies
        run: |
          curl -s -o ffmpeg_lgpl.7z -L https://github.com/rigaya/ffmpeg_dlls_for_hwenc/releases/download/20241102/ffmpeg_dlls_for_hwenc_20241102.7z
          7z x -offmpeg_lgpl -y ffmpeg_lgpl.7z
          git clone --depth 1 https://github.com/AviSynth/AviSynthPlus.git ..\AviSynthPlus
          git clone -b R72 --depth 1 https://github.com/vapoursynth/vapoursynth.git ..\vapoursynth
          git clone --depth 1 https://github.com/KhronosGroup/OpenCL-Headers.git ..\openclheaders

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: ${{ matrix.arch }}

      - name: MSBuild
        run: |
          set AVISYNTH_SDK=${{ github.workspace }}\..\AviSynthPlus\avs_core
          set VAPOURSYNTH_SDK=${{ github.workspace }}\..\vapoursynth
          set OPENCL_HEADERS=${{ github.workspace }}\..\openclheaders
          msbuild VCEEnc.sln /t:build /p:configuration=RelStatic /p:Platform=${{ matrix.platform }} -maxcpucount

      - name: Create Archieve
        id: archieve
        run: |
          mkdir VCEEncC_Release
          copy _build\${{ matrix.platform }}\RelStatic\VCEEncC*.exe VCEEncC_Release
          copy _build\${{ matrix.platform }}\RelStatic\*.dll VCEEncC_Release
          7z a -mx9 VCEEncC_${{ matrix.platform }}.7z .\VCEEncC_Release\*

      - name: Check dll
        run: |
          if ("${{ matrix.platform }}" == "x64")   "VCEEncC_Release\VCEEncC64.exe" --check-avcodec-dll
          if ("${{ matrix.platform }}" == "Win32") "VCEEncC_Release\VCEEncC.exe" --check-avcodec-dll

      - name: Check Version
        if: startsWith(github.ref, 'refs/tags/')
        id: check_ver
        run: |
          powershell "$ver = (Get-ItemProperty .\VCEEncC_Release\VCEEncC*.exe).VersionInfo.FileVersion; if ($ver -eq ) { exit 0; } exit 1;"

      - name: Calc hash
        id: calc_hash
        run: |
          7z h -scrc* VCEEncC_${{ matrix.platform }}.7z

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: VCEEncC_${{ matrix.platform }}.7z

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: VCEEncC_release_${{ matrix.platform }}
          path: VCEEncC_${{ matrix.platform }}.7z


  upload_aviutl_release:
    name: Upload Aviutl Release Asset
    runs-on: windows-2022
    needs: [ get_version_name, build ]

    defaults:
      run:
        shell: cmd

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Checkout dependencies
        run: |
          curl -s -o ffmpeg_lgpl.7z -L https://github.com/rigaya/ffmpeg_dlls_for_hwenc/releases/download/20241102/ffmpeg_dlls_for_hwenc_20241102.7z
          7z x -offmpeg_lgpl -y ffmpeg_lgpl.7z
          move ffmpeg5* ffmpeg_lgpl
          git clone https://github.com/AviSynth/AviSynthPlus.git ..\AviSynthPlus
          git clone -b R72 https://github.com/vapoursynth/vapoursynth.git ..\vapoursynth
          git clone https://github.com/KhronosGroup/OpenCL-Headers.git ..\openclheaders

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: Win32

      - name: MSBuild
        run: |
          set AVISYNTH_SDK=${{ github.workspace }}\..\AviSynthPlus\avs_core
          set VAPOURSYNTH_SDK=${{ github.workspace }}\..\vapoursynth
          set OPENCL_HEADERS=${{ github.workspace }}\..\openclheaders
          msbuild VCEEnc.sln /t:build /p:configuration=Release /p:Platform=Win32 -maxcpucount

      - name: Download auo_setup
        id: download_auosetup
        run: |
          curl -o auo_setup.zip -L https://github.com/rigaya/auo_setup/releases/download/2.02/auo_setup_2.02.zip

      - name: Download VCEEncC Win32
        uses: actions/download-artifact@v4
        with:
          name: VCEEncC_release_Win32
          path: VCEEncC_Win32.7z

      - name: Download VCEEncC x64
        uses: actions/download-artifact@v4
        with:
          name: VCEEncC_release_x64
          path: VCEEncC_x64.7z
          
      - name: Create package
        id: archieve
        run: |
          mkdir VCEEnc_release
          7z x -oVCEEnc_release\ auo_setup.zip
          mkdir VCEEnc_release\exe_files\VCEEncC
          mkdir VCEEnc_release\exe_files\VCEEncC\x86
          mkdir VCEEnc_release\exe_files\VCEEncC\x64
          7z x -oVCEEnc_release\exe_files\VCEEncC\x86\ VCEEncC_Win32.7z
          7z x -oVCEEnc_release\exe_files\VCEEncC\x64\ VCEEncC_x64.7z
          copy /y _build\Win32\Release\VCEEnc.auo VCEEnc_release\plugins\
          copy /y VCEEnc\VCEEnc.ini VCEEnc_release\plugins\
          copy /y VCEEnc\VCEEnc.en.ini VCEEnc_release\plugins\
          copy /y VCEEnc\VCEEnc.zh.ini VCEEnc_release\plugins\
          copy /y VCEEnc\auo_setup.ini VCEEnc_release\exe_files\
          copy /y VCEEnc\VCEEnc_readme.txt VCEEnc_release\
          echo D | xcopy /y /e VCEEnc\stg VCEEnc_release\plugins\VCEEnc_stg
          dir /b /s VCEEnc_release\
          7z a -mx9 VCEEnc.zip .\VCEEnc_release\*

          mkdir VCEEnc_release2
          mkdir VCEEnc_release2\Plugin
          mkdir VCEEnc_release2\Plugin\exe_files
          xcopy /e /y VCEEnc_release\exe_files VCEEnc_release2\Plugin\exe_files
          xcopy /e /y VCEEnc_release\plugins   VCEEnc_release2\Plugin
          del VCEEnc_release2\Plugin\auo_setup.auf
          del VCEEnc_release2\Plugin\exe_files\auo_setup.exe
          rmdir /s /q VCEEnc_release2\Plugin\exe_files\VCEEncC\x86
          7z a -t7z -m0=lzma -mx=9 -mmt Aviutl2_VCEEnc.7z .\VCEEnc_release2\*
          copy /b VCEEnc\7zSD.noadmin.sfx + VCEEnc\7zInstallerConfig.txt + Aviutl2_VCEEnc.7z Aviutl2_VCEEnc_install.exe

      - name: Check Version
        id: check_ver
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          powershell "$ver = (Get-ItemProperty .\VCEEnc_release\plugins\VCEEnc.auo).VersionInfo.FileVersion; if ($ver -eq ) { exit 0; } exit 1;"

      - name: Check dll
        id: check_dll
        run: |
          "VCEEnc_release\exe_files\VCEEncC\x86\VCEEncC.exe" --check-avcodec-dll
          "VCEEnc_release\exe_files\VCEEncC\x64\VCEEncC64.exe" --check-avcodec-dll

      - name: Calc hash
        id: calc_hash
        run: |
          7z h -scrc* VCEEnc.zip
          7z h -scrc* Aviutl2_VCEEnc_install.exe

      - name: delete release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: new
          delete_release: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: latest version
          tag_name: new
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./VCEEnc.zip
          asset_name: VCEEnc.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset-exe 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Aviutl2_VCEEnc_install.exe
          asset_name: Aviutl2_VCEEnc_install.exe
          asset_content_type: application/x-msdownload